package com.ehtsoft.supervise.services;

import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.stereotype.Service;

import com.ehtsoft.fw.core.db.MongoClient;
import com.ehtsoft.fw.core.db.RowDataListener;
import com.ehtsoft.fw.core.db.SQLAdapter;
import com.ehtsoft.fw.core.db.SqlDbClient;
import com.ehtsoft.fw.core.db.SqlDbFilter;
import com.ehtsoft.fw.core.dto.BasicMap;
import com.ehtsoft.fw.core.dto.Paginate;
import com.ehtsoft.fw.core.dto.ResultList;
import com.ehtsoft.fw.core.services.AbstractService;
import com.ehtsoft.fw.utils.DateUtil;
import com.ehtsoft.fw.utils.StringUtil;
import com.ehtsoft.fw.utils.Util;
import com.ehtsoft.im.api.ImConst;
import com.ehtsoft.supervise.api.SupConst;
import com.ibm.icu.text.SimpleDateFormat;

/**
 * 社区矫正人员居住地变
 * @author   :dd
 * @创建时间 :2017年11月26日 下午3:15:12
 * @修改人	 :
 * @创建时间 :2017年11月26日
 */
@Service("JzryJzdbgspService")
public class JzryJzdbgspService  extends AbstractService  {
	
	@Resource(name = "sqlDbClient")
	private SqlDbClient dbClient;
	
	
	@Resource(name="mongoClient")
	private MongoClient mongoClient;
	
	/**
	 * 矫正人员个人基本信息表 + 社区矫正人员居住地变更信息
	 * 根据	
	 * 		个人基本信息表内的ID=社区矫正人员居住地变信息采集表内的F_AID	获取社区矫正人员居住地变更信息
	 * @param id
	 * @return
	 */
	public BasicMap<String, Object> findOne(String id){
		String sqlstr = "select b.xm,b.xb,b.sfzh,b.sqjzrybh,c.jzlb,c.sqjzqx,c.jzsssq,c.sqjzksrq,c.sqjzjsrq,c.jtzm,c.ypxq,a.sfsshyj,a.bgdsfs,a.qrdmx,a.qrdxz,a.remark,a.sqsj,"
				+ "d.hjszdmx,d.gdjzdmx "
				+ "FROM JZ_JZDBGXXCJB a " + 
				"inner join JZ_JZRYJBXX b on b.id=a.f_aid " + 
				"inner join JZ_JZRYJBXX_JZ c on c.id=a.f_aid "+ 
				"inner join JZ_JZRYJBXX_DZ d on d.id=a.f_aid and a.f_aid='"+id+"'";//sql
		SQLAdapter sql = new SQLAdapter(sqlstr);
		//String sqlstr1 = "select * from JZ_JZRYJBXX_JZ where id=?";//sql
		BasicMap<String, Object> basicMap = dbClient.findOne(sql);//根据ID获取个人基本信息
		/**
		 * 根据	个人基本信息表内的ID=社区矫正人员居住地变更信息采集表内的F_AID	获取社区矫正人员居住地变更信息
		 */
		List<BasicMap<String,Object>> jzdbg = dbClient.find(SupConst.Collections.JZ_JZDBGXXCJB, new SqlDbFilter().eq("f_aid", id),new RowDataListener(){
			public void processData(BasicMap<String, Object> rowData) {
				/**
				 * 处理表内相关字段的时间格式
				 */
				rowData.put("sqsj",  DateUtil.format(rowData.get("sqsj"),"yyyy-MM-dd HH:mm"));
				rowData.put("sfsshsj",  DateUtil.format(rowData.get("sfsshsj"),"yyyy-MM-dd"));
				rowData.put("xsfjspsj",  DateUtil.format(rowData.get("xsfjspsj"),"yyyy-MM-dd"));
			}
		});
		basicMap.put("jzdbg", jzdbg);
		if(basicMap!=null){//限定时间格式为：“yyyy-MM-dd”；
			//个人基本信息表
			basicMap.put("sqjzksrq",  DateUtil.format(basicMap.get("sqjzksrq"),"yyyy-MM-dd"));
			basicMap.put("sqjzjsrq",  DateUtil.format(basicMap.get("sqjzjsrq"),"yyyy-MM-dd"));
		}
		return basicMap;
	}
	
	/**
	 * 根据	
	 * 		个人基本信息表内的【XM】模糊查询
	 * 			个人信息表与居住地变更信息采集表关联查询得到的结果	获取居住地变更信息
	 * @param id
	 * @return
	 */
	public List<BasicMap<String, Object>> findName(String name, Paginate paginate){
		String sql = "select b.xm,b.sfzh,b.grlxdh,a.* from JZ_JZDBGXXCJB a,JZ_JZRYJBXX b WHERE a.f_aid=b.id and xm like '%" +name+ "%'";
		SQLAdapter sqlAdapter = new SQLAdapter(sql);
		
		return dbClient.find(sqlAdapter, paginate,new RowDataListener() {
			public void processData(BasicMap<String, Object> rowData) {
				rowData.put("sqsj",  DateUtil.format(rowData.get("sqsj"),"yyyy-MM-dd HH:mm"));
				rowData.put("sfsshsj",  DateUtil.format(rowData.get("sfsshsj"),"yyyy-MM-dd HH:mm"));
				rowData.put("xsfjspsj",  DateUtil.format(rowData.get("xsfjspsj"),"yyyy-MM-dd HH:mm"));
			}
		}).getRows();
	} 
	
	
	/**
	 * 全部居住地变更信息
	 * @param id
	 * @return
	 */
	public List<BasicMap<String, Object>> findAll(BasicMap<String, Object> query, Paginate paginate){
		SqlDbFilter filter = toSqlFilter(query);
		String sql = "select b.xm,b.sfzh,b.grlxdh,a.*  from JZ_JZDBGXXCJB a,JZ_JZRYJBXX b WHERE a.f_aid=b.id order by a.sqsj desc";
		SQLAdapter sqlAdapter = new SQLAdapter(sql);
		sqlAdapter.setFilter(filter);

		return dbClient.find(sqlAdapter, paginate,new RowDataListener() {
			public void processData(BasicMap<String, Object> rowData) {
				rowData.put("sqsj",  DateUtil.format(rowData.get("sqsj"),"yyyy-MM-dd HH:mm"));
				rowData.put("sfsshsj",  DateUtil.format(rowData.get("sfsshsj"),"yyyy-MM-dd HH:mm"));
				rowData.put("xsfjspsj",  DateUtil.format(rowData.get("xsfjspsj"),"yyyy-MM-dd HH:mm"));
				if(!rowData.get("xsfjspyj").equals("") && rowData.get("xsfjspyj")!=null ) {
					rowData.put("spyj", rowData.get("xsfjspyj"));
				}else if(!rowData.get("sfsshyj").equals("") && rowData.get("sfsshyj") !=null ) {
					rowData.put("spyj", rowData.get("sfsshyj"));
				}else {
					rowData.put("spyj", "待司法所审核");
				}
			}
		}).getRows();
	}
	public void save(BasicMap<String,Object> map){
		dbClient.save(SupConst.Collections.JZ_JZDBGXXCJB, map);
		
	}
	
}
